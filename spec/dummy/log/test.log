 [36mCYPHER[0m [33m1118ms[0m CREATE CONSTRAINT ON (n:`GraphStarter::Asset`) ASSERT n.`uuid` IS UNIQUE 
 [36mCYPHER[0m [33m866ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"c543db9a-e0d1-4e3c-90ca-d76b8a2ca06f", :created_at=>1448517404, :updated_at=>1448517404, :private=>false}}
 [36mPerson[0m [33m695ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7446}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5e83114a-aaa5-4b4e-8641-a3fe8615e449", :created_at=>1448517406, :updated_at=>1448517406, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7447}
 [36mPerson[0m [33m109ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5293ec0d-87cd-4b7d-89df-b41cd6442318", :created_at=>1448517415, :updated_at=>1448517415, :private=>false}}
 [36mPerson[0m [33m141ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7448}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"f339ef50-a6c3-4211-ae06-195d735a701e", :created_at=>1448517415, :updated_at=>1448517415, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7449}
 [36mPerson[0m [33m167ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5211a5af-a4d1-4d6e-913e-6c4e6e272170", :created_at=>1448517422, :updated_at=>1448517422, :private=>false}}
 [36mPerson[0m [33m191ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7450}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"80001852-fad8-44e3-9df2-e3b7be2b2940", :created_at=>1448517423, :updated_at=>1448517423, :private=>true}}
 [36mPerson[0m [33m9ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7451}
 [36mPerson[0m [33m129ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m422ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m8ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"e6b116e5-1e37-4d4e-89ad-bc11dbb7b6ab", :created_at=>1448517525, :updated_at=>1448517525, :private=>false}}
 [36mPerson[0m [33m286ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7452}
 [36mCYPHER[0m [33m33ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"8a2ffb32-c943-460c-b56a-50f3941f0fc5", :created_at=>1448517526, :updated_at=>1448517526, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7453}
 [36mPerson[0m [33m350ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"cf157b2f-deb0-4ca6-a9a4-d10b0b9b2a4b", :created_at=>1448517532, :updated_at=>1448517532, :private=>false}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7454}
 [36mCYPHER[0m [33m9ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m6ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"4ff4fee5-f38b-4467-8d78-8d214bf2abd8", :created_at=>1448517532, :updated_at=>1448517532, :private=>true}}
 [36mPerson[0m [33m6ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7455}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m16ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m8ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"d62b185a-631e-4319-b930-bd02c95b13f8", :created_at=>1448517537, :updated_at=>1448517537, :private=>false}}
 [36mPerson[0m [33m11ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7456}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"01361e85-ff14-4e7d-9a31-c6fe57c084a3", :created_at=>1448517537, :updated_at=>1448517537, :private=>true}}
 [36mPerson[0m [33m10ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7457}
 [36mPerson[0m [33m8ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m21ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m17ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"032371cb-ccb1-46c7-9dc7-d1af477b23c5", :created_at=>1448517631, :updated_at=>1448517631, :private=>false}}
 [36mPerson[0m [33m20ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7458}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5df502a3-dda2-446f-a0ee-52e2d4153049", :created_at=>1448517631, :updated_at=>1448517631, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7459}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5f701e4c-e8a8-4dc7-8ad2-09ad43405010", :created_at=>1448517631, :updated_at=>1448517631, :private=>true}}
 [36mCYPHER[0m [33m43ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"f8d0576e-9f94-4d37-8f39-3deb70f22d9b", :admin=>true}}
 [36mPerson[0m [33m496ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7461, :other_node_id=>7460}
 [36mCYPHER[0m [33m40ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m19ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"d640e239-5200-4f7c-af71-be08748f9b1f", :created_at=>1448517826, :updated_at=>1448517826, :private=>false}}
 [36mPerson[0m [33m13ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7462}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"33ad26b0-5882-42db-bbf6-338ac9b76312", :created_at=>1448517826, :updated_at=>1448517826, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7463}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"28351a34-5148-4d94-9197-8b66f0d12bc8", :created_at=>1448517826, :updated_at=>1448517826, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"823a0ea7-d1e7-403b-8467-36fa3618911f"}}
 [36mPerson[0m [33m293ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7465, :other_node_id=>7464}
 [36mPerson[0m [33m221ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7465}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m8ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"8a22c71f-166b-4487-8ddb-ae5c409242e6", :created_at=>1448517827, :updated_at=>1448517827, :private=>true}}
 [36mCYPHER[0m [33m17ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"59eaafba-0618-4c39-8ac0-c5420b01fea9", :admin=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7467, :other_node_id=>7466}
 [36mCYPHER[0m [33m28ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m7ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"36973758-6c87-44ab-b445-ba5b70ee771f", :created_at=>1448518087, :updated_at=>1448518087, :private=>true}}
 [36mPerson[0m [33m12ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7468}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"7b621fc1-1770-414d-94d3-0ba76a8597da", :created_at=>1448518087, :updated_at=>1448518087, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"ef405ac0-aa46-4bde-8ea4-d0ecdf3a8d8a"}}
 [36mPerson[0m [33m487ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7470, :other_node_id=>7469}
 [36mPerson[0m [33m631ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7470}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m7ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"d37678a6-9034-4140-8b98-65bb9fd2ffea", :created_at=>1448518088, :updated_at=>1448518088, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"c0e4c473-722b-45df-ad3c-59c9035493c6", :admin=>true}}
 [36mPerson[0m [33m6ms[0m MATCH (asset:`Person`:`Asset`) WITH asset OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level]) AS level_collections, asset UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7472, :other_node_id=>7471}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"c16202b1-f98f-4ec4-bfbc-4c13d0c0eb9e", :created_at=>1448518088, :updated_at=>1448518088, :private=>true}}
 [36mCYPHER[0m [33m32ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"498e0268-b88c-469e-961d-d92987d8d300", :created_at=>1448518088, :updated_at=>1448518088, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m100ms[0m MATCH person7473 WHERE (ID(person7473) = {ID_person7473}) MATCH person7473-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7473=>7473}
 [36mCYPHER[0m [33m79ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7473, :ID_to_node=>7474, :rel_create_props=>{}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"d8480d03-845f-4c8a-9f2b-8292f6741bc3"}}
 [36mCYPHER[0m [33m11ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"4e6f5feb-4fbd-42fa-b1ed-5718470558fd", :created_at=>1448518121, :updated_at=>1448518121, :private=>false}}
 [36mPerson[0m [33m596ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7476}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"739a0dc4-30e3-48a5-8b73-87ef02cf5d41", :created_at=>1448518122, :updated_at=>1448518122, :private=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7477}
 [36mPerson[0m [33m257ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"c7449d03-65c6-4631-8bab-f9990c080852", :created_at=>1448518122, :updated_at=>1448518122, :private=>true}}
 [36mCYPHER[0m [33m5ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"2fc3e244-e7c1-40eb-aeff-446db756753d"}}
 [36mPerson[0m [33m1033ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7479, :other_node_id=>7478}
 [36mPerson[0m [33m347ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7479}
 [36mCYPHER[0m [33m13ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m10ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"35f65ca1-5fdc-4d0f-b698-2a7426676ed9", :created_at=>1448518124, :updated_at=>1448518124, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"8def4d20-b8c6-459a-a1d8-b3050bef66ad", :admin=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7481, :other_node_id=>7480}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"31c9051d-6033-42b6-b1b7-89023b72715f", :created_at=>1448518124, :updated_at=>1448518124, :private=>true}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"05fd20f1-7f49-4091-ad3c-d18edfc66d1a", :created_at=>1448518124, :updated_at=>1448518124, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m27ms[0m MATCH person7482 WHERE (ID(person7482) = {ID_person7482}) MATCH person7482-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7482=>7482}
 [36mCYPHER[0m [33m2ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7482, :ID_to_node=>7483, :rel_create_props=>{}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"22e92dcc-635e-4343-8a68-958d032d227e"}}
 [36mCYPHER[0m [33m64ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m15ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"15a8f0e0-043e-4538-8ea7-f59e184e0037", :created_at=>1448518318, :updated_at=>1448518318, :private=>false}}
 [36mPerson[0m [33m30ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7485}
 [36mCYPHER[0m [33m13ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m5ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"bf714660-56d9-44a6-8ed1-6f75745cd6ac", :created_at=>1448518318, :updated_at=>1448518318, :private=>true}}
 [36mPerson[0m [33m8ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7486}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"eb5bbd27-2ac0-4780-8d48-cc1817e68368", :created_at=>1448518318, :updated_at=>1448518318, :private=>true}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"28cd917b-1411-45e4-8241-461c31dee90e"}}
 [36mPerson[0m [33m8ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7488, :other_node_id=>7487}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7488}
 [36mCYPHER[0m [33m9ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"602a2838-cab7-4892-9e74-a6c4ca54134a", :created_at=>1448518318, :updated_at=>1448518318, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"918c7960-5680-4e6d-a73a-16065d3e2632", :admin=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7490, :other_node_id=>7489}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"5720fbed-c28e-4359-bea0-7a946cacd404", :created_at=>1448518318, :updated_at=>1448518318, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"168e7dfe-0d4d-4662-b171-3a2120c08c87", :created_at=>1448518318, :updated_at=>1448518318, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m79ms[0m MATCH person7491 WHERE (ID(person7491) = {ID_person7491}) MATCH person7491-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7491=>7491}
 [36mCYPHER[0m [33m16ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7491, :ID_to_node=>7492, :rel_create_props=>{}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"e3d22a5a-5948-4efc-b14a-a1216accdee9"}}
 [36mPerson[0m [33m69ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7493, :other_node_id=>7491}
 [36mCYPHER[0m [33m24ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m8ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"d32c27a7-d17c-4e84-b01a-c07449204de8", :created_at=>1448518384, :updated_at=>1448518384, :private=>false}}
 [36mPerson[0m [33m11ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7494}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"2763edea-582c-43b9-a399-ae75a912e123", :created_at=>1448518384, :updated_at=>1448518384, :private=>true}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7495}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"96542bad-ef23-42a7-a62b-c45f9f14b6fe", :created_at=>1448518384, :updated_at=>1448518384, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"6b28f557-a920-49db-a752-fc4e4951a5e5"}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7497, :other_node_id=>7496}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7497}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"0f1e11bc-c55f-4dc6-bc56-8a2e14d09ee0", :created_at=>1448518384, :updated_at=>1448518384, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"2769afb2-ead3-4c23-96b6-66a3e45499db", :admin=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7499, :other_node_id=>7498}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"12f5b73a-c1a3-4217-8ee1-62168c9bff5b", :created_at=>1448518384, :updated_at=>1448518384, :private=>true}}
 [36mCYPHER[0m [33m5ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"44d17e82-34b6-42dd-a4d2-dc0fa73dc903", :created_at=>1448518385, :updated_at=>1448518385, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"66f457bd-e6c3-4a9b-a7b3-9d46409bda43", :created_at=>1448518385, :updated_at=>1448518385, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m43ms[0m MATCH person7501 WHERE (ID(person7501) = {ID_person7501}) MATCH person7501-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7501=>7501}
 [36mCYPHER[0m [33m2ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7501, :ID_to_node=>7502, :rel_create_props=>{}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"f301b0df-c6cf-48dd-9164-e2ddb10854a4"}}
 [36mCYPHER[0m [33m22ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m7ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"dec39076-27f1-4575-8f54-c31a21cbfb73", :created_at=>1448518450, :updated_at=>1448518450, :private=>false}}
 [36mPerson[0m [33m13ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7504}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"cfc4f4e1-7061-47d9-a3ff-5d03c2ad9b32", :created_at=>1448518450, :updated_at=>1448518450, :private=>true}}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7505}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"ffcbb76d-b1c2-4e14-bbc8-4e9864b1113c", :created_at=>1448518450, :updated_at=>1448518450, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"a6fb66a1-5513-4c12-9ac5-275b6af85597"}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7507, :other_node_id=>7506}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7507}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"74377e81-3687-441d-8442-77f171aa65c7", :created_at=>1448518450, :updated_at=>1448518450, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"f8b3f880-13b3-41f9-ba2d-4dc9b5106a51", :admin=>true}}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7509, :other_node_id=>7508}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"ece308e7-19cf-4d75-86e2-6761589392c6", :created_at=>1448518450, :updated_at=>1448518450, :private=>true}}
 [36mPerson#allowed_users[0m [33m50ms[0m MATCH person7510 WHERE (ID(person7510) = {ID_person7510}) MATCH person7510<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_person7510=>7510}
 [36mCYPHER[0m [33m9ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"75771fc0-5f78-4fe0-a591-ff6ec9c20ed5"}}
 [36mPerson[0m [33m8ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7511, :other_node_id=>7510}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7511}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"98c7fbfb-4b56-407c-a6b2-488a52e7f431", :created_at=>1448518450, :updated_at=>1448518450, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"a3d9fa91-8ca5-4e81-b347-c09c4ac4d34f", :created_at=>1448518450, :updated_at=>1448518450, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m15ms[0m MATCH person7512 WHERE (ID(person7512) = {ID_person7512}) MATCH person7512-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7512=>7512}
 [36mCYPHER[0m [33m2ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7512, :ID_to_node=>7513, :rel_create_props=>{}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"3a6cb0cb-f00f-43be-9934-d30a02e41d17"}}
 [36mCompany#allowed_users[0m [33m9ms[0m MATCH company7513 WHERE (ID(company7513) = {ID_company7513}) MATCH company7513<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_company7513=>7513}
 [36mCYPHER[0m [33m204ms[0m MATCH (from_node), (to_node) WHERE (ID(from_node) = {from_node_id}) AND (ID(to_node) = {to_node_id}) CREATE UNIQUE from_node-[rel:CAN_ACCESS {rel_create_props}]->to_node SET rel.`level` = {setter_rel_level} RETURN rel | {:from_node_id=>7514, :to_node_id=>7513, :setter_rel_level=>"read", :rel_create_props=>{}}
 [36mPerson[0m [33m13ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7514, :other_node_id=>7512}
 [36mCYPHER[0m [33m7ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"1b48ff3f-3583-41ff-a587-49db36f06e6e", :created_at=>1448518464, :updated_at=>1448518464, :private=>false}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7515}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"e09ea820-30a2-4b4c-8e7b-189ac63eaa98", :created_at=>1448518464, :updated_at=>1448518464, :private=>true}}
 [36mPerson[0m [33m23ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7516}
 [36mPerson[0m [33m23ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m5ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"4d6d6445-6d6b-4f2b-bbd7-c920385ca5d0", :created_at=>1448518464, :updated_at=>1448518464, :private=>true}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"220047fb-fa43-4f9d-b3d2-d1191bfabd57"}}
 [36mPerson[0m [33m10ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7518, :other_node_id=>7517}
 [36mPerson[0m [33m8ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7518}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"a181ba24-a546-4d90-9fe4-5e455e6ac55d", :created_at=>1448518464, :updated_at=>1448518464, :private=>true}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"e1d766bd-744a-4cca-8b89-914361bd3301", :admin=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7520, :other_node_id=>7519}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"2a732e54-94e4-424c-9397-b58cea4452d0", :created_at=>1448518464, :updated_at=>1448518464, :private=>true}}
 [36mPerson#allowed_users[0m [33m16ms[0m MATCH person7521 WHERE (ID(person7521) = {ID_person7521}) MATCH person7521<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_person7521=>7521}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"70ba4334-3e4a-4d60-80f1-3a01d571376e"}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7522, :other_node_id=>7521}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7522}
 [36mCYPHER[0m [33m6ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"4b3c310b-4499-40e6-ae1c-121b2f1fdebd", :created_at=>1448518464, :updated_at=>1448518464, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"203815ab-4f87-40c0-a6f6-7a416752770b", :created_at=>1448518464, :updated_at=>1448518464, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m12ms[0m MATCH person7523 WHERE (ID(person7523) = {ID_person7523}) MATCH person7523-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7523=>7523}
 [36mCYPHER[0m [33m2ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7523, :ID_to_node=>7524, :rel_create_props=>{}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"317daa69-cdbc-4ae3-a9b8-27c693fca38a"}}
 [36mCompany#allowed_users[0m [33m12ms[0m MATCH company7524 WHERE (ID(company7524) = {ID_company7524}) MATCH company7524<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_company7524=>7524}
 [36mCYPHER[0m [33m3ms[0m MATCH (from_node), (to_node) WHERE (ID(from_node) = {from_node_id}) AND (ID(to_node) = {to_node_id}) CREATE UNIQUE from_node-[rel:CAN_ACCESS {rel_create_props}]->to_node SET rel.`level` = {setter_rel_level} RETURN rel | {:from_node_id=>7525, :to_node_id=>7524, :setter_rel_level=>"read", :rel_create_props=>{}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7525, :other_node_id=>7523}
 [36mCYPHER[0m [33m5ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"14307d0e-88b1-4de7-b4d7-a3da4798f848", :created_at=>1448518494, :updated_at=>1448518494, :private=>false}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7526}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"fc294a13-e19b-486f-941e-fb5fac718ec5", :created_at=>1448518494, :updated_at=>1448518494, :private=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>[], :other_node_id=>7527}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) IN {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>[]}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"fe35d45e-d45f-483c-b058-9ad85a421a59", :created_at=>1448518494, :updated_at=>1448518494, :private=>true}}
 [36mCYPHER[0m [33m4ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"7ec873a8-d646-4a81-a8eb-2530065ce5eb"}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7529, :other_node_id=>7528}
 [36mPerson[0m [33m5ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level RETURN asset | {:ID_user=>7529}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"acca2995-c58e-43c7-9f1d-5d1e34fe70b8", :created_at=>1448518494, :updated_at=>1448518494, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"1bb8ccd2-c7a7-45d7-bfad-54dc4eaa5f21", :admin=>true}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7531, :other_node_id=>7530}
 [36mCYPHER[0m [33m4ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"0d45d2ac-c494-4913-be5a-cb3fca044abd", :created_at=>1448518494, :updated_at=>1448518494, :private=>true}}
 [36mCYPHER[0m [33m3ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"16f2f70b-c5f2-4f2e-b2fe-34dd7378bc24"}}
 [36mPerson#allowed_users[0m [33m12ms[0m MATCH person7532 WHERE (ID(person7532) = {ID_person7532}) MATCH person7532<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_person7532=>7532}
 [36mCYPHER[0m [33m11ms[0m MATCH (from_node), (to_node) WHERE (ID(from_node) = {from_node_id}) AND (ID(to_node) = {to_node_id}) CREATE UNIQUE from_node-[rel:CAN_ACCESS {rel_create_props}]->to_node SET rel.`level` = {setter_rel_level} RETURN rel | {:from_node_id=>7533, :to_node_id=>7532, :setter_rel_level=>"read", :rel_create_props=>{}}
 [36mPerson[0m [33m3ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7533, :other_node_id=>7532}
 [36mCYPHER[0m [33m3ms[0m MATCH n OPTIONAL MATCH n-[r]-() DELETE n, r 
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Person`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"413eacbf-9f48-4bdb-8c4c-5dca6f336f7a", :created_at=>1448518494, :updated_at=>1448518494, :private=>true}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`Company`:`Asset` {props}) RETURN ID(n) | {:props=>{:uuid=>"ebfaf853-0885-4f90-829a-feef9fb147dd", :created_at=>1448518494, :updated_at=>1448518494, :private=>false, :name=>"Acme Inc. Co."}}
 [36mPerson#employer[0m [33m14ms[0m MATCH person7534 WHERE (ID(person7534) = {ID_person7534}) MATCH person7534-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`) DELETE rel1 | {:ID_person7534=>7534}
 [36mCYPHER[0m [33m2ms[0m MATCH from_node, to_node WHERE (ID(from_node) = {ID_from_node}) AND (ID(to_node) = {ID_to_node}) CREATE from_node-[rel:WORKS_AT {rel_create_props}]->to_node | {:ID_from_node=>7534, :ID_to_node=>7535, :rel_create_props=>{}}
 [36mCYPHER[0m [33m2ms[0m CREATE (n:`User` {props}) RETURN ID(n) | {:props=>{:uuid=>"735b9601-e353-4df3-9449-7da588e8424f"}}
 [36mCompany#allowed_users[0m [33m11ms[0m MATCH company7535 WHERE (ID(company7535) = {ID_company7535}) MATCH company7535<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`) DELETE rel1 | {:ID_company7535=>7535}
 [36mCYPHER[0m [33m2ms[0m MATCH (from_node), (to_node) WHERE (ID(from_node) = {from_node_id}) AND (ID(to_node) = {to_node_id}) CREATE UNIQUE from_node-[rel:CAN_ACCESS {rel_create_props}]->to_node SET rel.`level` = {setter_rel_level} RETURN rel | {:from_node_id=>7536, :to_node_id=>7535, :setter_rel_level=>"read", :rel_create_props=>{}}
 [36mPerson[0m [33m4ms[0m MATCH (asset:`Person`:`Asset`) OPTIONAL MATCH (asset)-[:`WORKS_AT`]->(category:Company) WITH asset,  collect(category) AS categories0 WITH asset, CASE categories0 WHEN [] THEN [null] ELSE categories0 END AS categories0 UNWIND categories0 AS category WITH asset, category OPTIONAL MATCH user WHERE (ID(user) = {ID_user}) OPTIONAL MATCH asset<-[asset_created_rel:CREATED]-user OPTIONAL MATCH asset<-[asset_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH asset<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user OPTIONAL MATCH category<-[category_created_rel:CREATED]-user OPTIONAL MATCH category<-[category_direct_access_rel:CAN_ACCESS]-user OPTIONAL MATCH category<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-user WITH * WITH collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN NOT(asset.private)  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin OR category_created_rel IS NOT NULL) THEN 'write' WHEN NOT(category.private)  THEN 'read' END, category_direct_access_rel.level, category_indirect_can_access_rel.level]) AS level_collections, asset, category UNWIND level_collections AS level_collection UNWIND level_collection AS level WITH level, asset, category WHERE NOT(level IS NULL) WITH collect(level) AS levels, asset, category WITH CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, asset, category WITH DISTINCT asset AS asset, level WHERE (ID(asset) = {other_node_id}) RETURN count(asset) as count | {:ID_user=>7536, :other_node_id=>7534}
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: Libcurl initialized
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.35241599999999995
 [34mHTTP REQUEST:[0m [33m365ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/constraint response_code=200 return_code=ok total_time=0.041302
 [34mHTTP REQUEST:[0m [33m43ms[0m GET http://localhost:7474/db/data/schema/constraint (0 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/index response_code=200 return_code=ok total_time=0.023169
 [34mHTTP REQUEST:[0m [33m24ms[0m GET http://localhost:7474/db/data/schema/index (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"2dd08ace-4c1b-40d6-b329-da70d3f3b15e"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.250693
 [34mHTTP REQUEST:[0m [33m252ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"d2b3bf51-0fd7-4273-8553-02ab1cc2f14b", :created_at=>1502202099, :updated_at=>1502202099, :slug=>"2dd08ace-4c1b-40d6-b329-da70d3f3b15e", :name=>"Person #1"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.136972
 [34mHTTP REQUEST:[0m [33m138ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/3/commit response_code=200 return_code=ok total_time=0.10515
 [34mHTTP REQUEST:[0m [33m107ms[0m POST http://localhost:7474/db/data/transaction/3/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/constraint response_code=200 return_code=ok total_time=0.003324
 [34mHTTP REQUEST:[0m [33m4ms[0m GET http://localhost:7474/db/data/schema/constraint (0 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/index response_code=200 return_code=ok total_time=0.005121
 [34mHTTP REQUEST:[0m [33m7ms[0m GET http://localhost:7474/db/data/schema/index (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"9e2c866e-a752-4adf-9d37-cf214582baa2"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.053271
 [34mHTTP REQUEST:[0m [33m54ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"a9dd480d-8032-4042-80ba-989208f7d43e", :created_at=>1502202099, :updated_at=>1502202099, :slug=>"9e2c866e-a752-4adf-9d37-cf214582baa2", :name=>"Company #1"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.038504
 [34mHTTP REQUEST:[0m [33m40ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/5/commit response_code=200 return_code=ok total_time=0.037152
 [34mHTTP REQUEST:[0m [33m38ms[0m POST http://localhost:7474/db/data/transaction/5/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) IN {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>[]}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.900848
 [34mHTTP REQUEST:[0m [33m902ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.015318
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"916e8ff8-1a07-42b6-bcf4-4448f0d2ebcc"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002316
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"404579d3-edef-45be-8b42-3cc61f3e335e", :created_at=>1502202101, :updated_at=>1502202101, :private=>true, :slug=>"916e8ff8-1a07-42b6-bcf4-4448f0d2ebcc", :name=>"Person #2"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.008441
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/9/commit response_code=200 return_code=ok total_time=0.020987
 [34mHTTP REQUEST:[0m [33m22ms[0m POST http://localhost:7474/db/data/transaction/9/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"92a28d8d-b319-4f72-af72-3a87d87ffde6"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007275
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"1a73386c-5e97-44cb-bf7c-2e24e6d7ab78", :created_at=>1502202101, :updated_at=>1502202101, :slug=>"92a28d8d-b319-4f72-af72-3a87d87ffde6", :name=>"Company #2"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.008653
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/11/commit response_code=200 return_code=ok total_time=0.024869
 [34mHTTP REQUEST:[0m [33m27ms[0m POST http://localhost:7474/db/data/transaction/11/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) IN {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>[]}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006483
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.010269
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"dfc5c600-6a3b-4cc1-87f3-dba483df451e"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00239
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"3b47839a-3e2a-41e8-a015-30ca4c08a9c9", :created_at=>1502202101, :updated_at=>1502202101, :private=>true, :slug=>"dfc5c600-6a3b-4cc1-87f3-dba483df451e", :name=>"Person #3"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.010234
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/15/commit response_code=200 return_code=ok total_time=0.028678
 [34mHTTP REQUEST:[0m [33m30ms[0m POST http://localhost:7474/db/data/transaction/15/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"d0430c6c-774d-4dcf-bf9f-6e1ac74263b1"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003646
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"90072a68-3e14-4bfe-b1c0-111e324ac2f2", :created_at=>1502202101, :updated_at=>1502202101, :slug=>"d0430c6c-774d-4dcf-bf9f-6e1ac74263b1", :name=>"Company #3"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005274
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/17/commit response_code=200 return_code=ok total_time=0.020940999999999987
 [34mHTTP REQUEST:[0m [33m22ms[0m POST http://localhost:7474/db/data/transaction/17/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/constraint response_code=200 return_code=ok total_time=0.002783
 [34mHTTP REQUEST:[0m [33m4ms[0m GET http://localhost:7474/db/data/schema/constraint (0 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/schema/index response_code=200 return_code=ok total_time=0.007363
 [34mHTTP REQUEST:[0m [33m8ms[0m GET http://localhost:7474/db/data/schema/index (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"6cb2f5f5-755f-42a8-905a-055b867fa5ac"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.013365
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/18/commit response_code=200 return_code=ok total_time=0.018851
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/18/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1290}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.343074
 [34mHTTP REQUEST:[0m [33m344ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.023391
 [34mHTTP REQUEST:[0m [33m24ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"189add52-7959-4dcf-84d4-4267a0c31906"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006371
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"62454f8c-86c0-4988-94a0-4a1eafcc69fd", :created_at=>1502202101, :updated_at=>1502202101, :private=>true, :slug=>"189add52-7959-4dcf-84d4-4267a0c31906", :name=>"Person #4"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006564
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/22/commit response_code=200 return_code=ok total_time=0.036408
 [34mHTTP REQUEST:[0m [33m38ms[0m POST http://localhost:7474/db/data/transaction/22/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"249f4fc9-0071-41cf-a993-6bad1ef6467b"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002356
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"d3fe9562-d868-4813-a74c-69c5c30ccac7", :created_at=>1502202101, :updated_at=>1502202101, :slug=>"249f4fc9-0071-41cf-a993-6bad1ef6467b", :name=>"Company #4"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.008231
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/24/commit response_code=200 return_code=ok total_time=0.031299
 [34mHTTP REQUEST:[0m [33m32ms[0m POST http://localhost:7474/db/data/transaction/24/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"af4e51ac-f3f3-435f-abf0-dc93791e5d17"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004411
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/25/commit response_code=200 return_code=ok total_time=0.024053
 [34mHTTP REQUEST:[0m [33m25ms[0m POST http://localhost:7474/db/data/transaction/25/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1293, :ID_to_node=>1291, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.06824
 [34mHTTP REQUEST:[0m [33m70ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/26/commit response_code=200 return_code=ok total_time=0.009657
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/26/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1293}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.016388
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.030139
 [34mHTTP REQUEST:[0m [33m31ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"7e0f812d-42f3-4721-993f-7e1bcda14a3f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002384
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"79df1878-9b06-436a-90ce-cda7dcb26939", :created_at=>1502202101, :updated_at=>1502202101, :private=>true, :slug=>"7e0f812d-42f3-4721-993f-7e1bcda14a3f", :name=>"Person #5"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006302
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/30/commit response_code=200 return_code=ok total_time=0.015669
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/30/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"6bcb64ff-e5e1-4a96-b803-5508d6a7abbb"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00242
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"525ad338-6645-4dc6-a458-7551bf37875a", :created_at=>1502202101, :updated_at=>1502202101, :slug=>"6bcb64ff-e5e1-4a96-b803-5508d6a7abbb", :name=>"Company #5"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005647
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/32/commit response_code=200 return_code=ok total_time=0.014418
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/32/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"fe1d4de0-0a8e-4d7a-92bb-ff44ba189761", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004111
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/33/commit response_code=200 return_code=ok total_time=0.011772
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/33/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1296}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.008492
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.022886
 [34mHTTP REQUEST:[0m [33m26ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"6c49e5fd-76db-4e14-85fe-843d56e14d7c"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00289
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"744e626d-6683-4be6-a4f4-d6f0b977dfab", :created_at=>1502202102, :updated_at=>1502202102, :private=>true, :slug=>"6c49e5fd-76db-4e14-85fe-843d56e14d7c", :name=>"Person #6"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005555
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/37/commit response_code=200 return_code=ok total_time=0.019345
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/37/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"b1745eb5-519b-48ce-8d11-14b2aaaee629"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002376
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"4d5e94c8-b240-4fe3-9f99-dcd8070020dc", :created_at=>1502202102, :updated_at=>1502202102, :slug=>"b1745eb5-519b-48ce-8d11-14b2aaaee629", :name=>"Company #6"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005314
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/39/commit response_code=200 return_code=ok total_time=0.017075
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/39/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"3fcb664d-ce38-4cec-8359-c4d774f4b0ca"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005283
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/40/commit response_code=200 return_code=ok total_time=0.016829
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/40/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#allowed_users[0m 
  [36mMATCH[0m (person1297)
  [36mWHERE[0m (ID(person1297) = {ID_person1297})
  [36mMATCH[0m (person1297)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_person1297=>1297}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.03686299999999998
 [34mHTTP REQUEST:[0m [33m38ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1299, :to_node_id=>1297, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/41 response_code=200 return_code=ok total_time=0.284645
 [34mHTTP REQUEST:[0m [33m286ms[0m POST http://localhost:7474/db/data/transaction/41 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/41/commit response_code=200 return_code=ok total_time=0.003461
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/41/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1299}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.01385
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.011147
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"33ddf4c8-8176-427b-af97-05d91bebfe4e"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002093
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"afa9929e-314e-4e11-9048-c1d6780c5869", :created_at=>1502202102, :updated_at=>1502202102, :private=>true, :slug=>"33ddf4c8-8176-427b-af97-05d91bebfe4e", :name=>"Person #7"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006377
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/45/commit response_code=200 return_code=ok total_time=0.022801
 [34mHTTP REQUEST:[0m [33m24ms[0m POST http://localhost:7474/db/data/transaction/45/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"4dab5bc3-df26-4751-9604-89444adb25c3"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003393
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"e25336cd-1177-45dd-9171-0bcc84cf14ef", :created_at=>1502202102, :updated_at=>1502202102, :slug=>"4dab5bc3-df26-4751-9604-89444adb25c3", :name=>"Company #7"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006464
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/47/commit response_code=200 return_code=ok total_time=0.031348
 [34mHTTP REQUEST:[0m [33m32ms[0m POST http://localhost:7474/db/data/transaction/47/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1300)
  [36mWHERE[0m (ID(person1300) = {ID_person1300})
  [36mMATCH[0m (person1300)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1300=>1300}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.049053
 [34mHTTP REQUEST:[0m [33m50ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1300, :ID_to_node=>1301, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/48 response_code=200 return_code=ok total_time=0.01887
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/48 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/48/commit response_code=200 return_code=ok total_time=0.00303
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/48/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"eb38b0b0-b921-4ca0-80ea-918352c006cd"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003722
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/49/commit response_code=200 return_code=ok total_time=0.009367
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/49/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1302}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005283
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.012781
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"6f7e6778-1cdc-43d2-a123-675e5ae24c45"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002239
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"ccd84648-185d-46ad-888d-e3bb6e4036a7", :created_at=>1502202102, :updated_at=>1502202102, :private=>true, :slug=>"6f7e6778-1cdc-43d2-a123-675e5ae24c45", :name=>"Person #8"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005737
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/53/commit response_code=200 return_code=ok total_time=0.015012
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/53/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"1da5aa53-6d50-4211-a166-1e7e15d74c5b"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002636
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"26d267c0-7286-4205-88ba-81e31686e863", :created_at=>1502202102, :updated_at=>1502202102, :slug=>"1da5aa53-6d50-4211-a166-1e7e15d74c5b", :name=>"Company #8"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.008569
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/55/commit response_code=200 return_code=ok total_time=0.032004
 [34mHTTP REQUEST:[0m [33m33ms[0m POST http://localhost:7474/db/data/transaction/55/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1303)
  [36mWHERE[0m (ID(person1303) = {ID_person1303})
  [36mMATCH[0m (person1303)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1303=>1303}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.03987
 [34mHTTP REQUEST:[0m [33m41ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1303, :ID_to_node=>1304, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/56 response_code=200 return_code=ok total_time=0.006547
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/56 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/56/commit response_code=200 return_code=ok total_time=0.003465
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/56/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"89f62f53-2998-4dd3-9b9e-3a5d6c4db3d1", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003963
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/57/commit response_code=200 return_code=ok total_time=0.008229
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/57/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1305}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005489
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.021895
 [34mHTTP REQUEST:[0m [33m23ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"fff37658-f040-41a7-85a6-a9a94b13a9d0"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002534
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"4200b687-bf68-42fd-83a8-81407f2643d4", :created_at=>1502202102, :updated_at=>1502202102, :private=>true, :slug=>"fff37658-f040-41a7-85a6-a9a94b13a9d0", :name=>"Person #9"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005041
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/61/commit response_code=200 return_code=ok total_time=0.020198
 [34mHTTP REQUEST:[0m [33m21ms[0m POST http://localhost:7474/db/data/transaction/61/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"8405dfec-2b7d-4213-b011-d05824da1d3f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00214
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"ffb91b6f-7695-431b-bb7a-d6f0b6774d50", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"8405dfec-2b7d-4213-b011-d05824da1d3f", :name=>"Company #9"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004576
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/63/commit response_code=200 return_code=ok total_time=0.019877
 [34mHTTP REQUEST:[0m [33m21ms[0m POST http://localhost:7474/db/data/transaction/63/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1306)
  [36mWHERE[0m (ID(person1306) = {ID_person1306})
  [36mMATCH[0m (person1306)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1306=>1306}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.026912
 [34mHTTP REQUEST:[0m [33m28ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1306, :ID_to_node=>1307, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/64 response_code=200 return_code=ok total_time=0.002873
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/64 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/64/commit response_code=200 return_code=ok total_time=0.002801
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/64/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"23ec3a69-71b5-4b9f-b7db-955146867d1a"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004437
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/65/commit response_code=200 return_code=ok total_time=0.008372
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/65/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1308, :ID_to_node=>1307, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003261
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/66/commit response_code=200 return_code=ok total_time=0.002637
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/66/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1308}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004131
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.010446
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"65c32b2e-f2be-439b-afce-32b8b1fd76a1"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002214
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"92ad75f9-f39d-4354-b94f-87a3968cfec2", :created_at=>1502202103, :updated_at=>1502202103, :private=>true, :slug=>"65c32b2e-f2be-439b-afce-32b8b1fd76a1", :name=>"Person #10"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004442
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/70/commit response_code=200 return_code=ok total_time=0.014342
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/70/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"1608d301-9c2f-4395-86f1-fb33137991a5"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002006
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"c343df8a-e023-4927-b641-a51d541940df", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"1608d301-9c2f-4395-86f1-fb33137991a5", :name=>"Company #10"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.007919
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/72/commit response_code=200 return_code=ok total_time=0.03606900000000002
 [34mHTTP REQUEST:[0m [33m37ms[0m POST http://localhost:7474/db/data/transaction/72/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1309)
  [36mWHERE[0m (ID(person1309) = {ID_person1309})
  [36mMATCH[0m (person1309)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1309=>1309}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.020761
 [34mHTTP REQUEST:[0m [33m22ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1309, :ID_to_node=>1310, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/73 response_code=200 return_code=ok total_time=0.003108
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/73 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/73/commit response_code=200 return_code=ok total_time=0.005113
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/73/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"e28c6cd9-6cfe-420d-96e9-2eaf76a7d937"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003295
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/74/commit response_code=200 return_code=ok total_time=0.017219
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/74/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany#allowed_users[0m 
  [36mMATCH[0m (company1310)
  [36mWHERE[0m (ID(company1310) = {ID_company1310})
  [36mMATCH[0m (company1310)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_company1310=>1310}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.029792
 [34mHTTP REQUEST:[0m [33m31ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1311, :to_node_id=>1310, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/75 response_code=200 return_code=ok total_time=0.005587
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/75 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/75/commit response_code=200 return_code=ok total_time=0.002794
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/75/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1311}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00827
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.010013
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"19e0b3f0-7e9c-4d1c-ab90-85687cbcd65a"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.0032
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"5a019979-31e1-4e9c-8088-ec593879fba2", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"19e0b3f0-7e9c-4d1c-ab90-85687cbcd65a", :name=>"Person #11"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004328
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/79/commit response_code=200 return_code=ok total_time=0.016188
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/79/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"546d772d-df18-4552-a7d8-35071003bbb1"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.001998
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"766b8f8b-3140-44d1-87f3-683bdb21907b", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"546d772d-df18-4552-a7d8-35071003bbb1", :name=>"Company #11"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004661
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/81/commit response_code=200 return_code=ok total_time=0.030097
 [34mHTTP REQUEST:[0m [33m31ms[0m POST http://localhost:7474/db/data/transaction/81/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) IN {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>[]}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005892
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006897
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"9495d909-de28-4622-b634-f1eea571026f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002124
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"d27b7f16-a5f7-4bd2-8405-85cc796d39c3", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"9495d909-de28-4622-b634-f1eea571026f", :name=>"Person #12"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005676
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/85/commit response_code=200 return_code=ok total_time=0.01422
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/85/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"0f636461-4be8-48a4-a021-8b4dc85e9848"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002165
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"a5f5955c-8b14-40dc-b98f-aead8473a91b", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"0f636461-4be8-48a4-a021-8b4dc85e9848", :name=>"Company #12"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004283
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/87/commit response_code=200 return_code=ok total_time=0.022572
 [34mHTTP REQUEST:[0m [33m24ms[0m POST http://localhost:7474/db/data/transaction/87/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"e86fe9b6-7d6c-44c7-9cf0-e28dc4c7bec0"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005123
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/88/commit response_code=200 return_code=ok total_time=0.010018
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/88/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1316}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005407
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007112
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"d4197830-f7de-4baf-9878-2c025ce413b3"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002004
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"d4a3cf28-5e74-4318-8597-32f070342d9a", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"d4197830-f7de-4baf-9878-2c025ce413b3", :name=>"Person #13"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.00476
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/92/commit response_code=200 return_code=ok total_time=0.017194
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/92/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"6be8c1bd-799a-4bff-86f4-1bc2bec1de13"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006288
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"63818b53-4ca9-4264-9868-19418356a09f", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"6be8c1bd-799a-4bff-86f4-1bc2bec1de13", :name=>"Company #13"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004205
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/94/commit response_code=200 return_code=ok total_time=0.020835
 [34mHTTP REQUEST:[0m [33m22ms[0m POST http://localhost:7474/db/data/transaction/94/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"a4cf1703-94ea-4611-a2eb-0963b7a1eebf"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003807
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/95/commit response_code=200 return_code=ok total_time=0.015827
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/95/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1319, :ID_to_node=>1317, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.002958
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/96/commit response_code=200 return_code=ok total_time=0.002557
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/96/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1319}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004973
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00917
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"1c5cfbfc-8f75-4bf6-b7e5-08b6c12508b7"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00217
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"3f2a6e81-0190-49c9-9ec7-74683282102f", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"1c5cfbfc-8f75-4bf6-b7e5-08b6c12508b7", :name=>"Person #14"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006012
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/100/commit response_code=200 return_code=ok total_time=0.012784
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction/100/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"d6a0435f-95cd-45de-a924-efba36d1126f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.001962
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"7a3411ed-78f2-44ff-8436-91f13978e7e2", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"d6a0435f-95cd-45de-a924-efba36d1126f", :name=>"Company #14"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003883
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/102/commit response_code=200 return_code=ok total_time=0.021994
 [34mHTTP REQUEST:[0m [33m23ms[0m POST http://localhost:7474/db/data/transaction/102/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"c0d9a529-a425-4758-96a8-17fdcb0db219", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003964
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/103/commit response_code=200 return_code=ok total_time=0.008947
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/103/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1322}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005661
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.009106
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"05746c0d-8f4b-4778-9e33-ba73da58b655"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002266
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"275df4a5-d47c-45f5-b630-8055d1398849", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"05746c0d-8f4b-4778-9e33-ba73da58b655", :name=>"Person #15"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003978
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/107/commit response_code=200 return_code=ok total_time=0.026703
 [34mHTTP REQUEST:[0m [33m28ms[0m POST http://localhost:7474/db/data/transaction/107/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"9d4974f4-6d25-4387-8f92-65d4c1c280e1"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.0027
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"18c7c378-7eb7-4aa9-b6e1-bbb58f0a3478", :created_at=>1502202103, :updated_at=>1502202103, :slug=>"9d4974f4-6d25-4387-8f92-65d4c1c280e1", :name=>"Company #15"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004008
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/109/commit response_code=200 return_code=ok total_time=0.031884
 [34mHTTP REQUEST:[0m [33m33ms[0m POST http://localhost:7474/db/data/transaction/109/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"61ac6a19-17fc-43a7-b404-5e3e8ba3e5f8"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003455
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/110/commit response_code=200 return_code=ok total_time=0.006832
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/110/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#allowed_users[0m 
  [36mMATCH[0m (person1323)
  [36mWHERE[0m (ID(person1323) = {ID_person1323})
  [36mMATCH[0m (person1323)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_person1323=>1323}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.021578
 [34mHTTP REQUEST:[0m [33m23ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1325, :to_node_id=>1323, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/111 response_code=200 return_code=ok total_time=0.005451
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/111 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/111/commit response_code=200 return_code=ok total_time=0.0025
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/111/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1325}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006967
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007862
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"c94bf4f1-c663-406e-b3c5-7dd0eb4250ff"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002116
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"ccb06f62-7829-4d3b-a925-812649d4efae", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"c94bf4f1-c663-406e-b3c5-7dd0eb4250ff", :name=>"Person #16"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.00344
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/115/commit response_code=200 return_code=ok total_time=0.014954
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/115/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"16dd0575-be3b-4201-9a75-0f6a8ee27209"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002039
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"9f093276-b560-44b1-abfd-7cba3b75314c", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"16dd0575-be3b-4201-9a75-0f6a8ee27209", :name=>"Company #16"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003635
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/117/commit response_code=200 return_code=ok total_time=0.029029
 [34mHTTP REQUEST:[0m [33m30ms[0m POST http://localhost:7474/db/data/transaction/117/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1326)
  [36mWHERE[0m (ID(person1326) = {ID_person1326})
  [36mMATCH[0m (person1326)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1326=>1326}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.019687
 [34mHTTP REQUEST:[0m [33m21ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1326, :ID_to_node=>1327, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/118 response_code=200 return_code=ok total_time=0.00244
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/118 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/118/commit response_code=200 return_code=ok total_time=0.002575
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/118/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"768de0dc-f6ec-4fdc-b507-af021af2112c"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005378
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/119/commit response_code=200 return_code=ok total_time=0.009445
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/119/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1328}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005125
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007009
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"259a8621-311f-4771-8793-213efa89f127"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002493
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"e407fedf-cd6a-43e6-864e-d2af7d6e4dc3", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"259a8621-311f-4771-8793-213efa89f127", :name=>"Person #17"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003767
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/123/commit response_code=200 return_code=ok total_time=0.013892
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/123/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"d49f4e55-33e7-4802-bb18-a8eaf89fe283"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006636
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"d62a624d-3c83-496b-9f5d-992b6f9b7e3d", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"d49f4e55-33e7-4802-bb18-a8eaf89fe283", :name=>"Company #17"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004996
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/125/commit response_code=200 return_code=ok total_time=0.024823999999999957
 [34mHTTP REQUEST:[0m [33m26ms[0m POST http://localhost:7474/db/data/transaction/125/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1329)
  [36mWHERE[0m (ID(person1329) = {ID_person1329})
  [36mMATCH[0m (person1329)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1329=>1329}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.027579
 [34mHTTP REQUEST:[0m [33m29ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1329, :ID_to_node=>1330, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/126 response_code=200 return_code=ok total_time=0.002787
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/126 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/126/commit response_code=200 return_code=ok total_time=0.003311
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/126/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"b31e12d4-4d80-4d5b-afae-fcfe7c892f73", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004863
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/127/commit response_code=200 return_code=ok total_time=0.014822
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/127/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1331}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005875
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007742
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"209aa4b2-c000-49a2-aab7-13dd55733ac9"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.001817
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"eb3ced4b-1d2f-4e3c-b27c-4290668c9329", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"209aa4b2-c000-49a2-aab7-13dd55733ac9", :name=>"Person #18"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004348
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/131/commit response_code=200 return_code=ok total_time=0.019025
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/131/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"084b6b61-51c0-4981-aba0-bafa5f0f2a68"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.001839
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"73a799de-cc5e-4c56-9744-5c23c61aa203", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"084b6b61-51c0-4981-aba0-bafa5f0f2a68", :name=>"Company #18"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004156
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/133/commit response_code=200 return_code=ok total_time=0.024693
 [34mHTTP REQUEST:[0m [33m26ms[0m POST http://localhost:7474/db/data/transaction/133/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1332)
  [36mWHERE[0m (ID(person1332) = {ID_person1332})
  [36mMATCH[0m (person1332)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1332=>1332}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.024287
 [34mHTTP REQUEST:[0m [33m26ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1332, :ID_to_node=>1333, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/134 response_code=200 return_code=ok total_time=0.002361
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/134 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/134/commit response_code=200 return_code=ok total_time=0.003027
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/134/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"4889d84e-b2e8-4eae-8319-34fe82ed5278"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003026
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/135/commit response_code=200 return_code=ok total_time=0.010642
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/135/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1334, :ID_to_node=>1333, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004794
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/136/commit response_code=200 return_code=ok total_time=0.00453
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/136/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1334}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.0052
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007357
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"b86708b5-ea81-465e-81c7-29efa4edaf13"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002455
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"e5491214-8ae9-48f0-aa8e-169c6c1f4994", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"b86708b5-ea81-465e-81c7-29efa4edaf13", :name=>"Person #19"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003712
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/140/commit response_code=200 return_code=ok total_time=0.015478
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/140/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"9afc91ce-7d6a-4a5a-a780-e3e8853a1a31"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002257
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"79b48f63-26b4-4069-a4e2-9aecc5c8ea11", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"9afc91ce-7d6a-4a5a-a780-e3e8853a1a31", :name=>"Company #19"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005315
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/142/commit response_code=200 return_code=ok total_time=0.011381
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/142/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1335)
  [36mWHERE[0m (ID(person1335) = {ID_person1335})
  [36mMATCH[0m (person1335)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1335=>1335}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.019194
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1335, :ID_to_node=>1336, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/143 response_code=200 return_code=ok total_time=0.002493
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/143 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/143/commit response_code=200 return_code=ok total_time=0.002534
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/143/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"2fac57ab-5568-435e-899f-7b46f0992020"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004536
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/144/commit response_code=200 return_code=ok total_time=0.009572
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/144/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany#allowed_users[0m 
  [36mMATCH[0m (company1336)
  [36mWHERE[0m (ID(company1336) = {ID_company1336})
  [36mMATCH[0m (company1336)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_company1336=>1336}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.022938
 [34mHTTP REQUEST:[0m [33m24ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1337, :to_node_id=>1336, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/145 response_code=200 return_code=ok total_time=0.003879
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/145 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/145/commit response_code=200 return_code=ok total_time=0.002398
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/145/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1337}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004778
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.008241
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"3876aabf-ec22-48b4-b840-db548e3c4c88"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002776
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"8351a6d5-faf8-4a88-af17-1ee0cc84b2c3", :created_at=>1502202104, :updated_at=>1502202104, :private=>false, :slug=>"3876aabf-ec22-48b4-b840-db548e3c4c88", :name=>"Person #20"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004036
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/149/commit response_code=200 return_code=ok total_time=0.012805
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction/149/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"8d9fd1be-407e-444b-a80a-e329542de243"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003371
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"dc9d2c95-bfc7-40a8-9a79-fc28649fadcf", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"8d9fd1be-407e-444b-a80a-e329542de243", :name=>"Company #20"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003408
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/151/commit response_code=200 return_code=ok total_time=0.028178
 [34mHTTP REQUEST:[0m [33m29ms[0m POST http://localhost:7474/db/data/transaction/151/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) IN {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>[]}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004842
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007917
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"68c76073-ff6f-4f3b-be49-c7603a9a8cb9"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00255
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"998ea8d9-73e6-43ab-a3fe-9cc2f5b65454", :created_at=>1502202104, :updated_at=>1502202104, :private=>false, :slug=>"68c76073-ff6f-4f3b-be49-c7603a9a8cb9", :name=>"Person #21"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003909
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/155/commit response_code=200 return_code=ok total_time=0.01399
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/155/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"989ca41b-2069-4d5d-8c93-4619376d905f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002112
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"6c54e1d3-d91e-44cf-bcae-cbe727a7a3bf", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"989ca41b-2069-4d5d-8c93-4619376d905f", :name=>"Company #21"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005151
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/157/commit response_code=200 return_code=ok total_time=0.012596
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction/157/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"8d4bc95f-349e-43c8-b717-2e1433f8d58b"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003227
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/158/commit response_code=200 return_code=ok total_time=0.011672
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/158/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1342}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004995
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.007464
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"cbdef8d1-8a0d-4b7b-8e07-57a157a9b5a8"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002488
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"daa36ea3-24f5-46a6-b68c-e57815300d83", :created_at=>1502202104, :updated_at=>1502202104, :private=>false, :slug=>"cbdef8d1-8a0d-4b7b-8e07-57a157a9b5a8", :name=>"Person #22"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004217
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/162/commit response_code=200 return_code=ok total_time=0.011795
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/162/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"0b38a5dc-ce0a-4387-afc4-4787344a4b8c"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002122
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"c48aa064-de8e-47da-9a40-99b16deafb06", :created_at=>1502202104, :updated_at=>1502202104, :slug=>"0b38a5dc-ce0a-4387-afc4-4787344a4b8c", :name=>"Company #22"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003968
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/164/commit response_code=200 return_code=ok total_time=0.029149
 [34mHTTP REQUEST:[0m [33m30ms[0m POST http://localhost:7474/db/data/transaction/164/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"19fd6ce7-2fd4-4464-a44c-0db53529cb4e"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004236
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/165/commit response_code=200 return_code=ok total_time=0.009843
 [34mHTTP REQUEST:[0m [33m11ms[0m POST http://localhost:7474/db/data/transaction/165/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1345, :ID_to_node=>1343, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.015648
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/166/commit response_code=200 return_code=ok total_time=0.00556
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/166/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1345}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005673
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.008036
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"1c445714-759b-4b4c-a1cf-b70d2f1c44ed"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002261
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"f3faa274-5c35-4652-a228-69ceebf1151c", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"1c445714-759b-4b4c-a1cf-b70d2f1c44ed", :name=>"Person #23"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004377
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/170/commit response_code=200 return_code=ok total_time=0.014391
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/170/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"cab3aed3-3c67-44ab-83f1-b7d689a0815f"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002534
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"e1e6ad98-a1a8-4a19-8e2e-26a5e6809da5", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"cab3aed3-3c67-44ab-83f1-b7d689a0815f", :name=>"Company #23"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004015
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/172/commit response_code=200 return_code=ok total_time=0.01362
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/172/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"e713ead8-1e61-4756-a887-a74682d8f8d0", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003538
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/173/commit response_code=200 return_code=ok total_time=0.016021
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/173/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1348}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006255
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006195
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"3aedcea0-41b1-4d3f-a260-7f4b3f6776cd"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002236
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"b5bb6ab7-0278-4526-a95f-50caf4e85c73", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"3aedcea0-41b1-4d3f-a260-7f4b3f6776cd", :name=>"Person #24"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003966
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/177/commit response_code=200 return_code=ok total_time=0.011508
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/177/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"5ebacbc1-d739-4c11-a001-52f75a979549"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002037
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"96b6c022-3a41-4da3-83ab-ad557e17aabc", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"5ebacbc1-d739-4c11-a001-52f75a979549", :name=>"Company #24"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004311
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/179/commit response_code=200 return_code=ok total_time=0.014258
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/179/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"edb799d0-426c-40cf-b8e5-5c165550501d"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005643
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/180/commit response_code=200 return_code=ok total_time=0.013055999999999957
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction/180/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#allowed_users[0m 
  [36mMATCH[0m (person1349)
  [36mWHERE[0m (ID(person1349) = {ID_person1349})
  [36mMATCH[0m (person1349)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_person1349=>1349}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.023836
 [34mHTTP REQUEST:[0m [33m25ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1351, :to_node_id=>1349, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/181 response_code=200 return_code=ok total_time=0.006141
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/181 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/181/commit response_code=200 return_code=ok total_time=0.005728
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/181/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1351}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.011286
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.012333
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"dcf766e1-fb5d-4266-afc9-0cb99624f7ba"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004506
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"a8857ec8-5f45-4232-b46c-5fa7a8e3ef54", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"dcf766e1-fb5d-4266-afc9-0cb99624f7ba", :name=>"Person #25"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.007029
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/185/commit response_code=200 return_code=ok total_time=0.015379
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/185/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"317a57ec-26d7-4f2a-ac2c-8b8b15526d59"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002712
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"f05c81c2-0bc2-4e39-a48f-cbabd1c31ac0", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"317a57ec-26d7-4f2a-ac2c-8b8b15526d59", :name=>"Company #25"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.010575
 [34mHTTP REQUEST:[0m [33m12ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/187/commit response_code=200 return_code=ok total_time=0.01913
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/187/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1352)
  [36mWHERE[0m (ID(person1352) = {ID_person1352})
  [36mMATCH[0m (person1352)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1352=>1352}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.028067
 [34mHTTP REQUEST:[0m [33m29ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1352, :ID_to_node=>1353, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/188 response_code=200 return_code=ok total_time=0.003952
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/188 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/188/commit response_code=200 return_code=ok total_time=0.003935
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/188/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"03388d64-aef5-4bc9-9481-d1ce4f388440"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.007977
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/189/commit response_code=200 return_code=ok total_time=0.018522
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/189/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1354}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004873
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006439
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"f9b8bb77-72ab-46dd-9778-cba899cbcbff"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00456
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"b0b4285a-cf27-4f0c-a063-aea5409f89ab", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"f9b8bb77-72ab-46dd-9778-cba899cbcbff", :name=>"Person #26"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006104
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/193/commit response_code=200 return_code=ok total_time=0.015763
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction/193/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"3d63e2ef-8795-44a6-afec-de859e751107"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002316
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"c6f1994f-e6bf-4112-908f-2ac9a1791b1e", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"3d63e2ef-8795-44a6-afec-de859e751107", :name=>"Company #26"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004802
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/195/commit response_code=200 return_code=ok total_time=0.014681
 [34mHTTP REQUEST:[0m [33m16ms[0m POST http://localhost:7474/db/data/transaction/195/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1355)
  [36mWHERE[0m (ID(person1355) = {ID_person1355})
  [36mMATCH[0m (person1355)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1355=>1355}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.033856
 [34mHTTP REQUEST:[0m [33m35ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1355, :ID_to_node=>1356, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/196 response_code=200 return_code=ok total_time=0.003628
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/196 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/196/commit response_code=200 return_code=ok total_time=0.0031
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/196/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"6df6d54c-41d3-47fe-95d1-59347253e8e6", :admin=>true}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004298
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/197/commit response_code=200 return_code=ok total_time=0.008162
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/197/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1357}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006059
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.008772
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"ccdbf8af-3e58-48df-b1e0-33e5df1a1ac7"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002426
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"129e515e-e2e1-4898-91e0-0d852c46d52d", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"ccdbf8af-3e58-48df-b1e0-33e5df1a1ac7", :name=>"Person #27"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005063
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/201/commit response_code=200 return_code=ok total_time=0.023196
 [34mHTTP REQUEST:[0m [33m24ms[0m POST http://localhost:7474/db/data/transaction/201/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"984adff7-28a1-427f-9dcc-6b45f7b7b52a"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00262
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"f1532300-319b-4339-8c5c-b270220fbade", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"984adff7-28a1-427f-9dcc-6b45f7b7b52a", :name=>"Company #27"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.009045
 [34mHTTP REQUEST:[0m [33m10ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/203/commit response_code=200 return_code=ok total_time=0.013795
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/203/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1358)
  [36mWHERE[0m (ID(person1358) = {ID_person1358})
  [36mMATCH[0m (person1358)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1358=>1358}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.02128
 [34mHTTP REQUEST:[0m [33m22ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1358, :ID_to_node=>1359, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/204 response_code=200 return_code=ok total_time=0.003515
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/204 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/204/commit response_code=200 return_code=ok total_time=0.002853
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/204/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"3e1c1b65-fa64-47d6-a527-35cf914c10ca"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003764
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/205/commit response_code=200 return_code=ok total_time=0.007642
 [34mHTTP REQUEST:[0m [33m9ms[0m POST http://localhost:7474/db/data/transaction/205/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`CREATED` {rel_create_props}]->(to_node) | {:ID_from_node=>1360, :ID_to_node=>1359, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003287
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/206/commit response_code=200 return_code=ok total_time=0.004884
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/206/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1360}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.011636
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.013857
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (result:`Person`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"429aecce-3b21-4aab-bfde-9321b5040316"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.0028
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Person`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"52620f49-1968-4a93-8c98-1889ae6771e3", :created_at=>1502202105, :updated_at=>1502202105, :private=>false, :slug=>"429aecce-3b21-4aab-bfde-9321b5040316", :name=>"Person #28"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.006873
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/210/commit response_code=200 return_code=ok total_time=0.018934
 [34mHTTP REQUEST:[0m [33m20ms[0m POST http://localhost:7474/db/data/transaction/210/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany[0m 
  [36mMATCH[0m (result:`Company`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"bc3808b8-bc6a-42c9-8e92-3acbce932c94"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002398
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Company`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"b97c5781-dd5a-4236-a712-2c483bf18c7f", :created_at=>1502202105, :updated_at=>1502202105, :slug=>"bc3808b8-bc6a-42c9-8e92-3acbce932c94", :name=>"Company #28"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.013181
 [34mHTTP REQUEST:[0m [33m14ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/212/commit response_code=200 return_code=ok total_time=0.013414
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/212/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson#employer[0m 
  [36mMATCH[0m (person1361)
  [36mWHERE[0m (ID(person1361) = {ID_person1361})
  [36mMATCH[0m (person1361)-[rel1:`WORKS_AT`]->(result_employer:`Company`:`Asset`)
  [31mDELETE[0m rel1 | {:ID_person1361=>1361}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.017848
 [34mHTTP REQUEST:[0m [33m19ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {ID_from_node}) AND 
    (ID(to_node) = {ID_to_node})
  [32mCREATE[0m (from_node)-[rel:`WORKS_AT` {rel_create_props}]->(to_node) | {:ID_from_node=>1361, :ID_to_node=>1362, :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/213 response_code=200 return_code=ok total_time=0.002853
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/213 (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/213/commit response_code=200 return_code=ok total_time=0.002075
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/213/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`User`) SET n = {props} RETURN n | {:props=>{:uuid=>"29ad10eb-9c35-44ab-907a-88baf693e1d0"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.005493
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/214/commit response_code=200 return_code=ok total_time=0.006663
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/214/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCompany#allowed_users[0m 
  [36mMATCH[0m (company1362)
  [36mWHERE[0m (ID(company1362) = {ID_company1362})
  [36mMATCH[0m (company1362)<-[rel1:`CAN_ACCESS`]-(result_allowed_users:`User`)
  [31mDELETE[0m rel1 | {:ID_company1362=>1362}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.016302
 [34mHTTP REQUEST:[0m [33m17ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m 
    (from_node), 
    (to_node)
  [36mWHERE[0m 
    (ID(from_node) = {from_node_id}) AND 
    (ID(to_node) = {to_node_id})
  [32mCREATE UNIQUE[0m (from_node)-[rel:`CAN_ACCESS` {rel_create_props}]->(to_node)
  [33mSET[0m rel.`level` = {setter_rel_level}
  [36mRETURN[0m rel | {:from_node_id=>1363, :to_node_id=>1362, :setter_rel_level=>"read", :rel_create_props=>{}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/215 response_code=200 return_code=ok total_time=0.003389
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/215 (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/215/commit response_code=200 return_code=ok total_time=0.003539
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/215/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mPerson[0m 
  [36mMATCH[0m (asset:`Person`:`Asset`)
  [36mOPTIONAL MATCH[0m (asset)-[:WORKS_AT]-(category:Asset)
  [36mWITH[0m 
    asset, 
    category
  [36mOPTIONAL MATCH[0m (user)
  [36mWHERE[0m (ID(user) = {ID_user})
  [36mOPTIONAL MATCH[0m (asset)<-[asset_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (asset)<-[asset_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_created_rel:CREATED]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_direct_access_rel:CAN_ACCESS]-(user)
  [36mOPTIONAL MATCH[0m (category)<-[category_indirect_can_access_rel:CAN_ACCESS]-(:Group)<-[:HAS_SUBGROUP*0..5]-(:Group)<-[:BELONGS_TO]-(user)
  [36mWITH[0m *
  [36mWITH[0m 
    FILTER(i IN REDUCE(a = [], sub_a IN collect([CASE WHEN (user.admin OR asset_created_rel IS NOT NULL) THEN 'write' WHEN (asset IS NOT NULL AND (asset.private IS NULL OR asset.private = false))  THEN 'read' END, asset_direct_access_rel.level, asset_indirect_can_access_rel.level, CASE WHEN (user.admin ) THEN 'write' WHEN (category IS NOT NULL AND ( category.private = false))  THEN 'read' END, category_direct_access_rel.level]) | a + sub_a) WHERE i IS NOT NULL) AS level_collection, 
    asset, 
    collect(category) AS category_list
  [36mWHERE[0m NOT('denied' IN level_collection)
  [36mUNWIND[0m level_collection AS level
  [36mWITH[0m 
    collect(level) AS levels, 
    asset, 
    category_list
  [36mWITH[0m 
    CASE WHEN 'write' IN levels THEN 'write' ELSE 'read' END AS level, 
    asset, 
    category_list
  [36mWITH[0m DISTINCT asset AS asset, level
  [36mRETURN[0m asset | {:ID_user=>1363}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005152
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.005895
 [34mHTTP REQUEST:[0m [33m7ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"test-title"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.026712
 [34mHTTP REQUEST:[0m [33m28ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.00234
 [34mHTTP REQUEST:[0m [33m4ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey-number-2"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003229
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002127
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mFoo[0m 
  [36mMATCH[0m (result:`Foo`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"golcuk-turkey"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.016532
 [34mHTTP REQUEST:[0m [33m18ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Foo`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"a8df2f25-c5a8-4eec-a36b-3aade857d244", :created_at=>1502202106, :updated_at=>1502202106, :slug=>"golcuk-turkey", :title=>"Gölcük, Turkey"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.013473
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/223/commit response_code=200 return_code=ok total_time=0.013643
 [34mHTTP REQUEST:[0m [33m15ms[0m POST http://localhost:7474/db/data/transaction/223/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.006502000000000008
 [34mHTTP REQUEST:[0m [33m8ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey-2"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002296
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
 [36mCYPHER[0m MATCH (n) DETACH DELETE n 
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004635
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mFoo[0m 
  [36mMATCH[0m (result:`Foo`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"golcuk-turkey"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002224
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Foo`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"9cd3ea9f-75c3-45bc-82e8-17582b178319", :created_at=>1502202106, :updated_at=>1502202106, :slug=>"golcuk-turkey", :title=>"Gölcük, Turkey"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.003771
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/228/commit response_code=200 return_code=ok total_time=0.011533
 [34mHTTP REQUEST:[0m [33m13ms[0m POST http://localhost:7474/db/data/transaction/228/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mFoo[0m 
  [36mMATCH[0m (result:`Foo`:`Asset`)
  [36mWHERE[0m (result.slug = {result_slug})
  [36mRETURN[0m ID(result) AS proof_of_life LIMIT 1 | {:result_slug=>"golcuk-turkey-2"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.002169
 [34mHTTP REQUEST:[0m [33m3ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m CREATE (n:`Foo`:`Asset`) SET n = {props} RETURN n | {:props=>{:uuid=>"ffc222e5-0d2b-4fcd-8e8d-a1835618a9e9", :created_at=>1502202106, :updated_at=>1502202106, :slug=>"golcuk-turkey-2", :title=>"Gölcük, Turkey!"}}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction response_code=201 return_code=ok total_time=0.004641
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction (1 bytes)
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/230/commit response_code=200 return_code=ok total_time=0.017573
 [34mHTTP REQUEST:[0m [33m19ms[0m POST http://localhost:7474/db/data/transaction/230/commit (0 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.004582
 [34mHTTP REQUEST:[0m [33m6ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey-2"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003439
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
WARNING: The constraint option is no longer supported (Defined on GraphStarter::Asset for slug)
WARNING: The index option is no longer supported (Defined on Foo for title)
 [36mCYPHER[0m 
  [36mMATCH[0m (result_graphstarterasset:`Asset`)
  [36mWHERE[0m (result_graphstarterasset.slug = {result_graphstarterasset_slug})
  [36mRETURN[0m count(result_graphstarterasset) AS result_graphstarterasset | {:result_graphstarterasset_slug=>"golcuk-turkey-3"}
ETHON: performed EASY effective_url=http://localhost:7474/db/data/transaction/commit response_code=200 return_code=ok total_time=0.003243
 [34mHTTP REQUEST:[0m [33m5ms[0m POST http://localhost:7474/db/data/transaction/commit (1 bytes)
